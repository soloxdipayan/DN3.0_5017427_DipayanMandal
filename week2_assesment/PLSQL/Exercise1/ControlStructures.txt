# Scenario 1: The bank wants to apply a discount to loan interest rates for customers above 60 years old.
## Question1: Write a PL/SQL block that loops through all customers, checks their age, and if they are above 60, apply a 1% discount to their current loan interest rates.
 ## Answer
```sql
BEGIN
    UPDATE Loans
    SET InterestRate = InterestRate - 1
    WHERE CustomerID IN (
        SELECT CustomerID
        FROM Customers
        WHERE TRUNC(MONTHS_BETWEEN(SYSDATE, DOB) / 12) > 60
    );
    COMMIT;
END;
/
```



# Scenario 2: A customer can be promoted to VIP status based on their balance.
## Question: Write a PL/SQL block that iterates through all customers and sets a flag IsVIP to TRUE for those with a balance over $10,000.
## Answer
First IsVIP column is added  to the Customers table:
```sql
ALTER TABLE Customers ADD (IsVIP VARCHAR2(3) DEFAULT 'NO');
```
pl/sql-
```sql
BEGIN
    UPDATE Customers
    SET IsVIP = 'YES'
    WHERE Balance > 10000;
    COMMIT;
END;
/
```




# Scenario 3: The bank wants to send reminders to customers whose loans are due within the next 30 days.
## Question: Write a PL/SQL block that fetches all loans due in the next 30 days and prints a reminder message for each customer.
## Answer
To open the output we have to first run the following sql query:
```sql
SET SERVEROUTPUT ON;
```
Now the following query:
```sql
DECLARE
    v_CustomerName Customers.Name%TYPE;
BEGIN
    FOR loan_rec IN (
        SELECT LoanID, CustomerID, EndDate
        FROM Loans
        WHERE EndDate BETWEEN SYSDATE AND SYSDATE + 30
    ) LOOP
        SELECT Name INTO v_CustomerName
        FROM Customers
        WHERE CustomerID = loan_rec.CustomerID;
        
        DBMS_OUTPUT.PUT_LINE('Reminder: Dear ' || v_CustomerName || ', your loan (ID: ' || loan_rec.LoanID || ') is due on ' || loan_rec.EndDate || '.');
    END LOOP;
END;
/
```


